{"version":3,"sources":["fbase.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","fireBaseInstance","authService","auth","dbService","firestore","storageService","storage","Nweet","nweetObj","isOwner","useState","editNweet","setEditNweet","text","newNweet","setNewNweet","onDeleteClick","a","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","prev","onSubmit","event","preventDefault","update","className","type","placeholder","onChange","value","target","autoFocus","onClick","src","class","icon","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","createId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onload","finishedEvent","result","currentTarget","readAsDataURL","style","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","AuthForm","email","setEmail","password","setPassword","error","setError","newAccount","setNewAccount","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","required","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faTwitter","color","size","marginBottom","faGoogle","faGithub","Profile","refreshUser","displayName","newdisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","e","updateProfile","signOut","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","isLocalhost","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.eebbe965.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const fireBaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editNweet, setEditNweet] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditNweet((prev) => !prev);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditNweet(false);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n\n    setNewNweet(value);\n  };\n\n  return (\n    <div className=\"nweet\">\n      {editNweet ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"edit your nweet\"\n              onChange={onChange}\n              value={newNweet}\n              autoFocus\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />{\" \"}\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}{\" \"}\n          {isOwner && (\n            <div class=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\nexport default Nweet;\n","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (nweet === \"\") return;\n    let attachmentUrl = \"\";\n    if (attachment != \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      createId: userObj.uid,\n      attachmentUrl,\n    };\n\n    dbService.collection(\"nweets\").add(nweetObj);\n    setAttachment(\"\");\n    setNweet(\"\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onload = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    theFile && reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => {\n    setAttachment(\"\");\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\nexport default NweetFactory;\n","import react, { useEffect, useState } from \"react\";\nimport Nweet from \"components/Nweet\";\nimport { dbService } from \"fbase\";\nimport { storageService } from \"fbase\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.createId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else {\n      setPassword(value);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n        console.log(data);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          required\n          placeholder=\"Email\"\n          onChange={onChange}\n          className=\"authInput\"\n          value={email}\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          required\n          placeholder=\"Password\"\n          onChange={onChange}\n          className=\"authInput\"\n          value={password}\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"createNewId\" : \"LogIn\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, fireBaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new fireBaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new fireBaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import react, { useEffect, useState } from \"react\";\nimport { authService, dbService } from \"fbase\";\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const [newdisplayName, setNewDisplayName] = useState(\n    userObj.displayName ? userObj.displayName : \"\"\n  );\n\n  const onLogoutClick = () => {\n    authService.signOut();\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n\n    setNewDisplayName(value);\n  };\n\n  const getMyNweets = async () => {\n    const nweets = await dbService\n      .collection(\"nweets\")\n      .where(\"createId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .get();\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (newdisplayName !== userObj.displayName) {\n      await userObj.updateProfile({\n        displayName: newdisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          type=\"text\"\n          placeholder=\"멋진이름을 작성하세요\"\n          value={newdisplayName}\n          onChange={onChange}\n          autoFocus\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogoutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;\n","import React, { useState } from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport Home from \"routes/Home\";\nimport Auth from \"routes/Auth\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile refreshUser={refreshUser} userObj={userObj} />\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(\"\");\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          ...user,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      ...user,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n    console.log(user);\n  };\n  return (\n    <div>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"initializing...\"\n      )}\n      <footer>&copy; {new Date().getFullYear()} Twitter</footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./style.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}